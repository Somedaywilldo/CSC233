Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | /* empty */

    4 token: INT
    5      | BOOL
    6      | FLOAT
    7      | VEC2
    8      | VEC3
    9      | VEC4
   10      | BVEC2
   11      | BVEC3
   12      | BVEC4
   13      | IVEC2
   14      | IVEC3
   15      | IVEC4
   16      | DP3
   17      | LIT
   18      | RSQ
   19      | PLUS
   20      | MINUS
   21      | MULT
   22      | DIV
   23      | POW
   24      | ASSIGN
   25      | TRUE_V
   26      | FALSE_V
   27      | INT_V
   28      | FLOAT_V
   29      | NOT
   30      | AND
   31      | OR
   32      | EQ
   33      | NEQ
   34      | LT
   35      | LE
   36      | GT
   37      | GE
   38      | LP
   39      | RP
   40      | LB
   41      | RB
   42      | LBR
   43      | RBR
   44      | IF
   45      | ELSE
   46      | WHILE
   47      | CONST
   48      | ID
   49      | SEMI
   50      | COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 4
BOOL (259) 5
FLOAT (260) 6
VEC2 (261) 7
VEC3 (262) 8
VEC4 (263) 9
BVEC2 (264) 10
BVEC3 (265) 11
BVEC4 (266) 12
IVEC2 (267) 13
IVEC3 (268) 14
IVEC4 (269) 15
DP3 (270) 16
LIT (271) 17
RSQ (272) 18
PLUS (273) 19
MINUS (274) 20
MULT (275) 21
DIV (276) 22
POW (277) 23
ASSIGN (278) 24
TRUE_V (279) 25
FALSE_V (280) 26
INT_V (281) 27
FLOAT_V (282) 28
NOT (283) 29
AND (284) 30
OR (285) 31
EQ (286) 32
NEQ (287) 33
LT (288) 34
LE (289) 35
GT (290) 36
GE (291) 37
LP (292) 38
RP (293) 39
LB (294) 40
RB (295) 41
LBR (296) 42
RBR (297) 43
IF (298) 44
ELSE (299) 45
WHILE (300) 46
CONST (301) 47
ID (302) 48
SEMI (303) 49
COMMA (304) 50


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
tokens (52)
    on left: 2 3, on right: 1 2
token (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50, on right: 2


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: tokens .
    2 tokens: tokens . token

    INT      shift, and go to state 4
    BOOL     shift, and go to state 5
    FLOAT    shift, and go to state 6
    VEC2     shift, and go to state 7
    VEC3     shift, and go to state 8
    VEC4     shift, and go to state 9
    BVEC2    shift, and go to state 10
    BVEC3    shift, and go to state 11
    BVEC4    shift, and go to state 12
    IVEC2    shift, and go to state 13
    IVEC3    shift, and go to state 14
    IVEC4    shift, and go to state 15
    DP3      shift, and go to state 16
    LIT      shift, and go to state 17
    RSQ      shift, and go to state 18
    PLUS     shift, and go to state 19
    MINUS    shift, and go to state 20
    MULT     shift, and go to state 21
    DIV      shift, and go to state 22
    POW      shift, and go to state 23
    ASSIGN   shift, and go to state 24
    TRUE_V   shift, and go to state 25
    FALSE_V  shift, and go to state 26
    INT_V    shift, and go to state 27
    FLOAT_V  shift, and go to state 28
    NOT      shift, and go to state 29
    AND      shift, and go to state 30
    OR       shift, and go to state 31
    EQ       shift, and go to state 32
    NEQ      shift, and go to state 33
    LT       shift, and go to state 34
    LE       shift, and go to state 35
    GT       shift, and go to state 36
    GE       shift, and go to state 37
    LP       shift, and go to state 38
    RP       shift, and go to state 39
    LB       shift, and go to state 40
    RB       shift, and go to state 41
    LBR      shift, and go to state 42
    RBR      shift, and go to state 43
    IF       shift, and go to state 44
    ELSE     shift, and go to state 45
    WHILE    shift, and go to state 46
    CONST    shift, and go to state 47
    ID       shift, and go to state 48
    SEMI     shift, and go to state 49
    COMMA    shift, and go to state 50

    $default  reduce using rule 1 (program)

    token  go to state 51


state 3

    0 $accept: program $end .

    $default  accept


state 4

    4 token: INT .

    $default  reduce using rule 4 (token)


state 5

    5 token: BOOL .

    $default  reduce using rule 5 (token)


state 6

    6 token: FLOAT .

    $default  reduce using rule 6 (token)


state 7

    7 token: VEC2 .

    $default  reduce using rule 7 (token)


state 8

    8 token: VEC3 .

    $default  reduce using rule 8 (token)


state 9

    9 token: VEC4 .

    $default  reduce using rule 9 (token)


state 10

   10 token: BVEC2 .

    $default  reduce using rule 10 (token)


state 11

   11 token: BVEC3 .

    $default  reduce using rule 11 (token)


state 12

   12 token: BVEC4 .

    $default  reduce using rule 12 (token)


state 13

   13 token: IVEC2 .

    $default  reduce using rule 13 (token)


state 14

   14 token: IVEC3 .

    $default  reduce using rule 14 (token)


state 15

   15 token: IVEC4 .

    $default  reduce using rule 15 (token)


state 16

   16 token: DP3 .

    $default  reduce using rule 16 (token)


state 17

   17 token: LIT .

    $default  reduce using rule 17 (token)


state 18

   18 token: RSQ .

    $default  reduce using rule 18 (token)


state 19

   19 token: PLUS .

    $default  reduce using rule 19 (token)


state 20

   20 token: MINUS .

    $default  reduce using rule 20 (token)


state 21

   21 token: MULT .

    $default  reduce using rule 21 (token)


state 22

   22 token: DIV .

    $default  reduce using rule 22 (token)


state 23

   23 token: POW .

    $default  reduce using rule 23 (token)


state 24

   24 token: ASSIGN .

    $default  reduce using rule 24 (token)


state 25

   25 token: TRUE_V .

    $default  reduce using rule 25 (token)


state 26

   26 token: FALSE_V .

    $default  reduce using rule 26 (token)


state 27

   27 token: INT_V .

    $default  reduce using rule 27 (token)


state 28

   28 token: FLOAT_V .

    $default  reduce using rule 28 (token)


state 29

   29 token: NOT .

    $default  reduce using rule 29 (token)


state 30

   30 token: AND .

    $default  reduce using rule 30 (token)


state 31

   31 token: OR .

    $default  reduce using rule 31 (token)


state 32

   32 token: EQ .

    $default  reduce using rule 32 (token)


state 33

   33 token: NEQ .

    $default  reduce using rule 33 (token)


state 34

   34 token: LT .

    $default  reduce using rule 34 (token)


state 35

   35 token: LE .

    $default  reduce using rule 35 (token)


state 36

   36 token: GT .

    $default  reduce using rule 36 (token)


state 37

   37 token: GE .

    $default  reduce using rule 37 (token)


state 38

   38 token: LP .

    $default  reduce using rule 38 (token)


state 39

   39 token: RP .

    $default  reduce using rule 39 (token)


state 40

   40 token: LB .

    $default  reduce using rule 40 (token)


state 41

   41 token: RB .

    $default  reduce using rule 41 (token)


state 42

   42 token: LBR .

    $default  reduce using rule 42 (token)


state 43

   43 token: RBR .

    $default  reduce using rule 43 (token)


state 44

   44 token: IF .

    $default  reduce using rule 44 (token)


state 45

   45 token: ELSE .

    $default  reduce using rule 45 (token)


state 46

   46 token: WHILE .

    $default  reduce using rule 46 (token)


state 47

   47 token: CONST .

    $default  reduce using rule 47 (token)


state 48

   48 token: ID .

    $default  reduce using rule 48 (token)


state 49

   49 token: SEMI .

    $default  reduce using rule 49 (token)


state 50

   50 token: COMMA .

    $default  reduce using rule 50 (token)


state 51

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
