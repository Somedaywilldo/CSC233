Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | /* empty */

    4 token: INT
    5      | BOOL
    6      | FLOAT
    7      | VEC2
    8      | VEC3
    9      | VEC4 BVEC2
   10      | BVEC3
   11      | BVEC4 IVEC2
   12      | IVEC3
   13      | IVEC4 DP3
   14      | LIT
   15      | RSQ PLUS
   16      | MINUS
   17      | MULT
   18      | DIV
   19      | POW ASSIGN BTRUE
   20      | BFALSE NOT
   21      | AND
   22      | OR
   23      | EQ
   24      | NEQ
   25      | LT
   26      | LE
   27      | GT
   28      | GE
   29      | LP
   30      | RP
   31      | LB
   32      | RB
   33      | LBR
   34      | RBR IF
   35      | ELSE
   36      | WHILE CONST
   37      | ID
   38      | SEMI
   39      | COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 4
BOOL (259) 5
FLOAT (260) 6
VEC2 (261) 7
VEC3 (262) 8
VEC4 (263) 9
BVEC2 (264) 9
BVEC3 (265) 10
BVEC4 (266) 11
IVEC2 (267) 11
IVEC3 (268) 12
IVEC4 (269) 13
DP3 (270) 13
LIT (271) 14
RSQ (272) 15
PLUS (273) 15
MINUS (274) 16
MULT (275) 17
DIV (276) 18
POW (277) 19
ASSIGN (278) 19
BTRUE (279) 19
BFALSE (280) 20
NOT (281) 20
AND (282) 21
OR (283) 22
EQ (284) 23
NEQ (285) 24
LT (286) 25
LE (287) 26
GT (288) 27
GE (289) 28
LP (290) 29
RP (291) 30
LB (292) 31
RB (293) 32
LBR (294) 33
RBR (295) 34
IF (296) 34
ELSE (297) 35
WHILE (298) 36
CONST (299) 36
ID (300) 37
SEMI (301) 38
COMMA (302) 39


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
tokens (50)
    on left: 2 3, on right: 1 2
token (51)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 2


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: tokens .
    2 tokens: tokens . token

    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    FLOAT   shift, and go to state 6
    VEC2    shift, and go to state 7
    VEC3    shift, and go to state 8
    VEC4    shift, and go to state 9
    BVEC3   shift, and go to state 10
    BVEC4   shift, and go to state 11
    IVEC3   shift, and go to state 12
    IVEC4   shift, and go to state 13
    LIT     shift, and go to state 14
    RSQ     shift, and go to state 15
    MINUS   shift, and go to state 16
    MULT    shift, and go to state 17
    DIV     shift, and go to state 18
    POW     shift, and go to state 19
    BFALSE  shift, and go to state 20
    AND     shift, and go to state 21
    OR      shift, and go to state 22
    EQ      shift, and go to state 23
    NEQ     shift, and go to state 24
    LT      shift, and go to state 25
    LE      shift, and go to state 26
    GT      shift, and go to state 27
    GE      shift, and go to state 28
    LP      shift, and go to state 29
    RP      shift, and go to state 30
    LB      shift, and go to state 31
    RB      shift, and go to state 32
    LBR     shift, and go to state 33
    RBR     shift, and go to state 34
    ELSE    shift, and go to state 35
    WHILE   shift, and go to state 36
    ID      shift, and go to state 37
    SEMI    shift, and go to state 38
    COMMA   shift, and go to state 39

    $default  reduce using rule 1 (program)

    token  go to state 40


state 3

    0 $accept: program $end .

    $default  accept


state 4

    4 token: INT .

    $default  reduce using rule 4 (token)


state 5

    5 token: BOOL .

    $default  reduce using rule 5 (token)


state 6

    6 token: FLOAT .

    $default  reduce using rule 6 (token)


state 7

    7 token: VEC2 .

    $default  reduce using rule 7 (token)


state 8

    8 token: VEC3 .

    $default  reduce using rule 8 (token)


state 9

    9 token: VEC4 . BVEC2

    BVEC2  shift, and go to state 41


state 10

   10 token: BVEC3 .

    $default  reduce using rule 10 (token)


state 11

   11 token: BVEC4 . IVEC2

    IVEC2  shift, and go to state 42


state 12

   12 token: IVEC3 .

    $default  reduce using rule 12 (token)


state 13

   13 token: IVEC4 . DP3

    DP3  shift, and go to state 43


state 14

   14 token: LIT .

    $default  reduce using rule 14 (token)


state 15

   15 token: RSQ . PLUS

    PLUS  shift, and go to state 44


state 16

   16 token: MINUS .

    $default  reduce using rule 16 (token)


state 17

   17 token: MULT .

    $default  reduce using rule 17 (token)


state 18

   18 token: DIV .

    $default  reduce using rule 18 (token)


state 19

   19 token: POW . ASSIGN BTRUE

    ASSIGN  shift, and go to state 45


state 20

   20 token: BFALSE . NOT

    NOT  shift, and go to state 46


state 21

   21 token: AND .

    $default  reduce using rule 21 (token)


state 22

   22 token: OR .

    $default  reduce using rule 22 (token)


state 23

   23 token: EQ .

    $default  reduce using rule 23 (token)


state 24

   24 token: NEQ .

    $default  reduce using rule 24 (token)


state 25

   25 token: LT .

    $default  reduce using rule 25 (token)


state 26

   26 token: LE .

    $default  reduce using rule 26 (token)


state 27

   27 token: GT .

    $default  reduce using rule 27 (token)


state 28

   28 token: GE .

    $default  reduce using rule 28 (token)


state 29

   29 token: LP .

    $default  reduce using rule 29 (token)


state 30

   30 token: RP .

    $default  reduce using rule 30 (token)


state 31

   31 token: LB .

    $default  reduce using rule 31 (token)


state 32

   32 token: RB .

    $default  reduce using rule 32 (token)


state 33

   33 token: LBR .

    $default  reduce using rule 33 (token)


state 34

   34 token: RBR . IF

    IF  shift, and go to state 47


state 35

   35 token: ELSE .

    $default  reduce using rule 35 (token)


state 36

   36 token: WHILE . CONST

    CONST  shift, and go to state 48


state 37

   37 token: ID .

    $default  reduce using rule 37 (token)


state 38

   38 token: SEMI .

    $default  reduce using rule 38 (token)


state 39

   39 token: COMMA .

    $default  reduce using rule 39 (token)


state 40

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)


state 41

    9 token: VEC4 BVEC2 .

    $default  reduce using rule 9 (token)


state 42

   11 token: BVEC4 IVEC2 .

    $default  reduce using rule 11 (token)


state 43

   13 token: IVEC4 DP3 .

    $default  reduce using rule 13 (token)


state 44

   15 token: RSQ PLUS .

    $default  reduce using rule 15 (token)


state 45

   19 token: POW ASSIGN . BTRUE

    BTRUE  shift, and go to state 49


state 46

   20 token: BFALSE NOT .

    $default  reduce using rule 20 (token)


state 47

   34 token: RBR IF .

    $default  reduce using rule 34 (token)


state 48

   36 token: WHILE CONST .

    $default  reduce using rule 36 (token)


state 49

   19 token: POW ASSIGN BTRUE .

    $default  reduce using rule 19 (token)
